
#
# KPIC FIU PI Coronagraph initialization file
#
#
# WARNING: the lack of spaces between commas is a functional choice. If spaces
# are added, scripts may break (as no strip is applied to this data)

[Communication]
# Default location to store debug file
debug_log:  /nfiudata/LOGS/Coronagraph.log

[Environment]
# Command to start control script
# to use with Popen: split by "|" and then split by " "
start_command: tmux new -d -s Coronagraph|tmux send-keys -t Coronagraph "Coronagraph_Control" Enter
# Command to end control script
end_command:   tmux kill-ses -t Coronagraph

[Presets]
vortex:   0.,0.
apodizer: 0.,0.
through:  0.,0.

[Limits]
# x axis lower limit
min_x: -13.
# x axis upper limit
max_x: 13.
# y axis lower limit
min_y: -13.
# y axis upper limit
max_y: 13. 

[Shm Info]
# for each of the following, the first element is the path to the shared 
#   memory, the second is the (numpy) data type in the shared memory,
#   and the third is whether the shm is mmapped
#
# The directory path below is made in Coronagraph_Control, so change that file if
#   changing location of shms.

# NOTE: float16 might work, need to check precision of encoder
# Shared memory to store the current positiom
Pos_D:  /tmp/Coronagraph/POSD.shm,float32,1
# NOTE: float16 might work, need to check precision of encoder
# Shared memory to store the target position
Pos_P:  /tmp/Coronagraph/POSP.shm,float32,1
# Shared memory to store the current status
#
# Information is stored in bits as followed:
#   bit 0 (LSB) : script status (1 = alive, 0 = off)
#   bit 1       : device power  (1 = on, 0 = off)
#   bit 2       : device state  (1 = loop closed & homed, 0 = loop open)
Stat_D: /tmp/Coronagraph/STATUSD.shm,uint8,0
# Shared memory to store the target status
#
# Information stored as in Stat_D
Stat_P: /tmp/Coronagraph/STATUSP.shm,uint8,0
# Shared memory to store any error that arises
#
# Error codes:
#   0 = No Error // 1 = gcserror // 2 = Unreferenced movement // 3 = movement limit //
#   4 = Device not connected
Error:  /tmp/Coronagraph/ERROR.shm,uint8,0