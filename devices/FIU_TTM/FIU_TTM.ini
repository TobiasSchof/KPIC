#
# KPIC FIU PI Tip-Tilt mirror initialization file
#
#
# WARNING: the lack of spaces between commas is a functional choice. If spaces
# are added, scripts may break (as no strip is applied to this data)

[Communication]
# Default location to store TTM log file
debug_log:  /nfiudata/LOGS/FIU_TTM.log

[Environment]
# Command to start control script
# to use with Popen: split by "|" and then split beginning by " "
start_command: tmux new -d -s FIU_TTM|FIU_TTM_Control
# Command to end control script
end_command:   tmux kill-ses -t FIU_TTM

[TTM_Limits]
# Axis 1 lower limit
min_1: 0.
# Axis 1 higher limit
max_1: 10000.
# Axis 2 lower limit
min_2: 0.
# Axis 2 higher limit
max_2: 10000.

[Shm_Info]
# for each of the following, the first element is the path to the shared 
#   memory and the second is the (numpy) data type in the shared memory
#
# The directory path below is made in FIU_TTM_Control, so change that file if
#   changing location of shms.

# NOTE: float16 might work, need to check precision of encoder
# Shared memory to store the current positiom
Pos_D:  /tmp/FIU_TTM/POSD.im.shm,float32
# NOTE: float16 might work, need to check precision of encoder
# Shared memory to store the target position
Pos_P:  /tmp/FIU_TTM/POSP.im.shm,float32
# Shared memory to store the current status
Stat_D: /tmp/FIU_TTM/STATUSD.im.shm,int8
# Shared memory to store the target status
Stat_P: /tmp/FIU_TTM/STATUSP.im.shm,int8
# Shared memory to store any error that arises
Error:  /tmp/FIU_TTM/ERROR.im.shm,uint8
# Shared memory to store the target servo state
#  (can also assume this is the current servo state)
Svos:   /tmp/FIU_TTM/SVOS.im.shm,int8

# To get the size of a shared memory, look here and split by ","
[Shm_Init]
# pos, pos
# Nonsense values that will be overwritten
Pos_D:  -5000.,-5000.
# pos, pos
# The center of the TTM's range
Pos_P:  5000.,5000.
# 2 = moving // 1 = all (stage & script) on // 0 = stage off
#    -1 = script dead // -2 = all off 
# NOTE: a starting value of 2 is picked to force the control script to update
Stat_D: 2
# 1 = device on // 0 = device off
Stat_P: 1
# 0 = None // 1 = MovementRange // 2 = LoopOpen // 3 = StageOff
Error:  0
# whether the servo is on
Svos:   1,1
